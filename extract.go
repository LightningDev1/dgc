// Code generated by 'yaegi extract github.com/LightningDev1/dgc'. DO NOT EDIT.

package dgc

import (
	"github.com/LightningDev1/dgc"
	"reflect"
)

var Symbols = map[string]map[string]reflect.Value{}

func init() {
	Symbols["github.com/LightningDev1/dgc/dgc"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CodeblockLanguages":  reflect.ValueOf(&CodeblockLanguages).Elem(),
		"Create":              reflect.ValueOf(Create),
		"NewRateLimiter":      reflect.ValueOf(NewRateLimiter),
		"ParseArguments":      reflect.ValueOf(ParseArguments),
		"RegexArguments":      reflect.ValueOf(&RegexArguments).Elem(),
		"RegexBigCodeblock":   reflect.ValueOf(&RegexBigCodeblock).Elem(),
		"RegexChannelMention": reflect.ValueOf(&RegexChannelMention).Elem(),
		"RegexRoleMention":    reflect.ValueOf(&RegexRoleMention).Elem(),
		"RegexSmallCodeblock": reflect.ValueOf(&RegexSmallCodeblock).Elem(),
		"RegexUserMention":    reflect.ValueOf(&RegexUserMention).Elem(),

		// type definitions
		"Argument":           reflect.ValueOf((*Argument)(nil)),
		"Arguments":          reflect.ValueOf((*Arguments)(nil)),
		"Category":           reflect.ValueOf((*Category)(nil)),
		"Codeblock":          reflect.ValueOf((*Codeblock)(nil)),
		"Command":            reflect.ValueOf((*Command)(nil)),
		"Ctx":                reflect.ValueOf((*Ctx)(nil)),
		"DefaultRateLimiter": reflect.ValueOf((*DefaultRateLimiter)(nil)),
		"ExecutionHandler":   reflect.ValueOf((*ExecutionHandler)(nil)),
		"HelpMessage":        reflect.ValueOf((*HelpMessage)(nil)),
		"Middleware":         reflect.ValueOf((*Middleware)(nil)),
		"ObjectsMap":         reflect.ValueOf((*ObjectsMap)(nil)),
		"RateLimiter":        reflect.ValueOf((*RateLimiter)(nil)),
		"Router":             reflect.ValueOf((*Router)(nil)),

		// interface wrapper definitions
		"_RateLimiter": reflect.ValueOf((*_github_com_LightningDev1_dgc_RateLimiter)(nil)),
	}
}

// _github_com_LightningDev1_dgc_RateLimiter is an interface wrapper for RateLimiter type
type _github_com_LightningDev1_dgc_RateLimiter struct {
	IValue           interface{}
	WNotifyExecution func(a0 *Ctx) bool
}

func (W _github_com_LightningDev1_dgc_RateLimiter) NotifyExecution(a0 *Ctx) bool {
	return W.WNotifyExecution(a0)
}
